

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Объект.ТестовыйЗапуск = Истина;
	УстановитьОтборСпискаЗаказов(Элементы.СтраницыЗаказов.ТекущаяСтраница);
КонецПроцедуры

#КонецОбласти
 
#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СтраницыЗаказовПриСменеСтраницы(Элемент, ТекущаяСтраница)
	УстановитьОтборСпискаЗаказов(ТекущаяСтраница);
КонецПроцедуры

#КонецОбласти
 
#Область ОбработчикиСобытийЭлементовТаблицы
// здесь размещаются обработчики событий элементов талицы формы, если таблица формы присутствует.
// Для каждой таблицы телается отдельная область кода.
#КонецОбласти
 
#Область ОбработчикиКомандФормы

#Область OZON

&НаКлиенте
Процедура ЗагрузитьЗаказыOZON(Команда)
	ЗагрузитьЗаказыOZONНаСервере();
	Элементы.СписокЗаказовОзон.Обновить();
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьЗаказыOZONНаСервере()
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	ОбъектОбработки.ЗагрузитьВсеЗаказыOZON();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьГотовностьКОтправкеOZONНаСервере(ЗаказПокупателя)
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	ОбъектОбработки.ВыполнитьСборкуЗаказаСOZON(ЗаказПокупателя);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьГотовностьКОтправкеOZON(Команда)
	ОбработкаОповещения = Новый ОписаниеОповещения("УстановитьГотовностьКОтправкеOZONПродолжение", ЭтаФорма);
	ПоказатьВопрос(ОбработкаОповещения, "После перевода в статус ""Ожидает отправления"", отменить этот статус уже будет невозможно, продолжить?", РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьГотовностьКОтправкеOZONПродолжение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаказПокупателя = Элементы.СписокЗаказовОзон.ТекущиеДанные.Ссылка;
		УстановитьГотовностьКОтправкеOZONНаСервере(ЗаказПокупателя);
	КонецЕсли;
	Элементы.СписокЗаказовОзон.Обновить();
	
КонецПроцедуры

&НаСервере
Функция НапечататьМаркировкуOZONНаСервере(ЗаказПокупателя)
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	ДвоичныеДанные = ОбъектОбработки.НапечататьМаркировкуЗаказаСOZON(ЗаказПокупателя);
	
	Возврат ДвоичныеДанные;
	
КонецФункции

&НаКлиенте
Процедура НапечататьМаркировкуOZON(Команда)
	
	ЗаказПокупателя = Элементы.СписокЗаказовОзон.ТекущиеДанные.Ссылка;
	ДвоичныеДанные = НапечататьМаркировкуOZONНаСервере(ЗаказПокупателя);
	
	Если ДвоичныеДанные <> Неопределено Тогда
		ИмяФайлаМаркировки = ПолучитьИмяВременногоФайла(".pdf");
		ДвоичныеДанные.Записать(ИмяФайлаМаркировки);
		Сообщить("Файл маркировки успешно сохранен");
		Сообщить(ИмяФайлаМаркировки);
		ЗапуститьПриложение(ИмяФайлаМаркировки);
	КонецЕсли;
	
	Элементы.СписокЗаказовОзон.Обновить();

КонецПроцедуры

&НаСервере
Процедура ТЕСТ_УдалитьВсеЗаказыOZONНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказПокупателя.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
		|ГДЕ
		|	ЗаказПокупателя.Покупатель = &Покупатель
		|	И ЗаказПокупателя.СлужбаДоставки = &СлужбаДоставки";
	
	Запрос.УстановитьПараметр("Покупатель", Справочники.Покупатели.НайтиПоНаименованию("OZON"));
	Запрос.УстановитьПараметр("СлужбаДоставки", Справочники.Контрагенты.НайтиПоНаименованию("OZON"));
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл

		ОбДок = Выборка.Ссылка.ПолучитьОбъект();
		ОбДок.Удалить();
		
	КонецЦикла;
	
	ПустойНаборЗаписей = РегистрыСведений.OZON_ДанныеПоЗаказам.СоздатьНаборЗаписей();
	ПустойНаборЗаписей.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ТЕСТ_УдалитьВсеЗаказыOZON(Команда)
	ТЕСТ_УдалитьВсеЗаказыOZONНаСервере();
	Элементы.СписокЗаказовОзон.Обновить();	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьЗаказыТребующиеОбработкиOZON(Команда)
	ЗагрузитьЗаказыТребующиеОбработкиOZONНаСервере();
	Элементы.СписокЗаказовОзон.Обновить();
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьЗаказыТребующиеОбработкиOZONНаСервере()
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	ОбъектОбработки.ЗагрузитьВсеНеобработанныеЗаказыOZON();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСпорПоОтправлениюСOZON(Команда)
	
	ЗаказПокупателя = Элементы.СписокЗаказовОзон.ТекущиеДанные.Ссылка;
	ОткрытьСпорПоОтправлениюСOZONНаСервере(ЗаказПокупателя);
	
	Элементы.СписокЗаказовОзон.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура ОткрытьСпорПоОтправлениюСOZONНаСервере(ЗаказПокупателя)
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	ОбъектОбработки.ОткрытьСпорПоОтправлениюСOZON(ЗаказПокупателя);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьЗаказаOZON(Команда)
	
	ОповещениеПриЗакрытии = Новый ОписаниеОповещения("ОтменитьЗаказаOZONПродолжение", ЭтаФорма);
	Если ЭтоВнешняяОбработка() Тогда
		ОткрытьФорму("ВнешняяОбработка.АРМОператораИнтернетМагазина_Новый.Форма.ПричиныОтменыЗаказа",,ЭтаФорма,,,,ОповещениеПриЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
	Иначе
		ОткрытьФорму("Обработка.АРМОператораИнтернетМагазина_Новый.Форма.ПричиныОтменыЗаказа",,ЭтаФорма,,,,ОповещениеПриЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьЗаказаOZONПродолжение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ЗаказПокупателя = Элементы.СписокЗаказовОзон.ТекущиеДанные.Ссылка;
		ОтменитьЗаказаOZONНаСервере(ЗаказПокупателя, Результат.КодОтмены, Результат.ПричинаОтмены);
	КонецЕсли;
	
	Элементы.СписокЗаказовОзон.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура ОтменитьЗаказаOZONНаСервере(ЗаказПокупателя, КодОтмены, ПричинаОтмены)

	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	ОбъектОбработки.ВыполнитьОтменуЗаказаOZON(ЗаказПокупателя, КодОтмены, ПричинаОтмены);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
 
#Область СлужебныеПроцедурыИФункции

	
&НаСервере
Функция ЭтоВнешняяОбработка()

	ЭтоВнешняяОбработка = Ложь;
	
	ПолноеИмяОбработки = РеквизитФормыВЗначение("Объект").Метаданные().ПолноеИмя();
	Если СтрНайти(нрег(ПолноеИмяОбработки),"внешняяобработка") Тогда
		ЭтоВнешняяОбработка = Истина;
	КонецЕсли;
	
    Возврат ЭтоВнешняяОбработка
	
КонецФункции

&НаКлиенте
Процедура УстановитьОтборСпискаЗаказов(ТекущаяСтраница)
	
	СписокЗаказов.Отбор.Элементы.Очистить();
	
	ИмяТаблицы = "";
	Если ТекущаяСтраница.Имя = "СтраницаВсеЗаказы" Тогда
		ИмяТаблицы = "СписокЗаказовВсеЗаказы";
	ИначеЕсли ТекущаяСтраница.Имя = "СтраницаЗаказыОзон" Тогда
		ЭлементОтбора = СписокЗаказов.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СлужбаДоставки");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ПравоеЗначение = Справочники.Контрагенты.НайтиПоНаименованию("OZON");
		ИмяТаблицы = "СписокЗаказовОзон";
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ИмяТаблицы) Тогда
		Элементы[ИмяТаблицы].Период.Вариант =ВариантСтандартногоПериода.ПроизвольныйПериод;
		Элементы[ИмяТаблицы].Период.ДатаНачала = ТекущаяДата() - 30 * 24 * 60 * 60;
		Элементы[ИмяТаблицы].Период.ДатаОкончания = КонецГода(ТекущаяДата());
		Элементы[ИмяТаблицы].Обновить();	
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

